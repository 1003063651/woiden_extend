name: 续订

on: 
  workflow_dispatch:
  schedule:
    - cron: "0 0,8,16 * * *"
env:
  USERNAME: ${{ secrets.USERNAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  APP_ID: ${{ secrets.APP_ID }}
  API_KEY: ${{ secrets.API_KEY }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  TWOCAPTCHA_TOKEN: ${{ secrets.TWOCAPTCHA_TOKEN }}
  TELE_ID: ${{ secrets.TELE_ID }}
  TELE_TOKEN: ${{ secrets.TELE_TOKEN }}
  ASR_CHOICE: ${{ secrets.ASR_CHOICE }}
  IBM_URL: ${{ secrets.IBM_URL }}

#       sudo sed -i 's/azure\.//' /etc/apt/sources.list 防止apt安装失败

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      check: ${{ steps.check.outputs.check }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        
      - id: check
        name: Check condition
        run: |
          renewTime=$(cat renewTime)
          interval=$(( ($(date -d "now" +%s) - $(date -d "$renewTime" +%s))/(24*60*60) )) 2>&1 
          if [ "$?" = 0 ] && [ $interval -gt 0 ] && [ $interval -lt 8 ]; then
            echo "check=success" >> $GITHUB_OUTPUT
          else
            echo "check=fail" >> $GITHUB_OUTPUT
          fi
          
  renew:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.check == 'success'
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        
      - name: Install Python
        run: |
          sudo sed -i 's/azure\.//' /etc/apt/sources.list && sudo apt update && \
          sudo apt install python3 
      
      - name: Install requirements
        run: |
          pip3 install -r ./requirements.txt
          pip3 install cffi==1.12.3 gevent==1.4.0 greenlet==0.4.15 pycparser==2.19 six==1.12.0 websocket==0.2.1 websocket-client==0.56.0
          playwright install --with-deps

      - name: Renew
        run: |
          sed -i -e "s:GITHUB = False:GITHUB = True:g" main.py
          sed -i -e "s:# import xfyunAPI:import xfyunAPI:g" main.py
          sed -i -e "s:#         elif ASR_CHOICE == 'XF':         elif ASR_CHOICE == 'XF':g" main.py
          sed -i -e "s:#            XF_APP_ID:            XF_APP_ID:g" main.py
          sed -i -e "s:#            XF_API_KEY:            XF_API_KEY:g" main.py
          sed -i -e "s:#            XF_SECRET_KEY:            XF_SECRET_KEY:g" main.py
          sed -i -e "s:#            return xfyunAPI.asr:            return xfyunAPI.asr:g" main.py
          
          python3 main.py
          
          sed -i -e "s:GITHUB = True:GITHUB = False:g" main.py
          sed -i -e "s:import xfyunAPI:# import xfyunAPI:g" main.py
          sed -i -e "s:         elif ASR_CHOICE == 'XF':#         elif ASR_CHOICE == 'XF':g" main.py
          sed -i -e "s:            XF_APP_ID:#            XF_APP_ID:g" main.py
          sed -i -e "s:            XF_API_KEY:#            XF_API_KEY:g" main.py
          sed -i -e "s:            XF_SECRET_KEY:#            XF_SECRET_KEY:g" main.py
          sed -i -e "s:            return xfyunAPI.asr:#            return xfyunAPI.asr:g" main.py
          
          a=$(cat renewTime)
          b=${a//-/.}
          sed -i -e "s:badge/".*"-activity:badge/"$b"-activity:g" README.md
      - name: Push
        run: |
          git config --local user.email "1223105850@qq.com"
          git config --local user.name "Zakkoree"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -a -m "download file"
          git push
